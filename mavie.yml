openapi: 3.0.0
paths:
  /login:
    post:
      summary: Customer Login
      description: 'This endpoint allows a customer to login to the system, set a jwt token in the cookie and return the list of products purchased by the customer'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the customer
                password:
                  type: string
                  description: The password of the customer
                remember_me:
                  type: boolean
                  description: 'If true, set both the refresh token and access token in the cookie, if false, only set the access token in the cookie'
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                there are two cookies set in the response, the access token is set to be httpOnly and secure, the refresh token is set to be httpOnly and secure, the refresh token is only included if remember_me is true
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
                - refresh_token: The JWT refresh token to be used to refresh the access token, this is valid for 1 hour or 30 days depending on the value of remember_me
              schema:
                type: string
                example: |
                  "access_token:jwt token here; Secure, HttpOnly"
                  "refresh_token:jwt token here; Secure, HttpOnly"
          content:
            application/json:
              schema:
                $ref: '#/paths/~1auth/get/responses/200/content/application~1json/schema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
  /auth:
    get:
      summary: know if the user is still logged in
      description: 'This endpoint allows the front end to know if the user is still logged in, this api uses http-only cookie for authorization, so the front end should not send any authorization header to the backend'
      responses:
        '200':
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                type: string
                example: 'access_token:jwt token here; Secure, HttpOnly'
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    description: The id of the user
                  productList:
                    type: array
                    description: The list of products purchased by the customer
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the product
                        name:
                          type: string
                          description: The name of the product
                  surveyList:
                    type: array
                    description: The list of surveys
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the survey
                        name:
                          type: string
                          description: The name of the survey
                        relatedProductList:
                          type: array
                          description: The list of products related to the survey
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The id of the product
                              name:
                                type: string
                                description: The name of the product
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}':
    get:
      summary: Get a specific product's info
      description: This endpoint allows the front end to get information about a specific product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                properties:
                  brand:
                    type: string
                    description: The brand of the product
                  brandIcon:
                    type: string
                    description: The brand icon of the product
                  description:
                    type: string
                    description: The description of the product
                  image:
                    type: string
                    description: The image link of the product
                  modelName:
                    type: string
                    description: The model name of the product
                  productCategoryName:
                    type: string
                    description: The product category of the product
                  expertOpinion:
                    type: string
                    description: The expert opinion of the product
                  overallRating:
                    type: number
                    description: 'The overall rating of the product, float number, fixed to 2 decimal places'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/persona':
    get:
      summary: get persona category api
      description: 'This endpoint allows the front end to get the persona category, which is used for the persona filter'
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persona'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/filter':
    get:
      summary: Get a specific product's filter info
      description: This endpoint allows the front end to get information about the filter of a specific product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFilterResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/rating':
    get:
      summary: Get a specific product rating info
      description: This endpoint allows the front end to get information about the rating of a specific product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                properties:
                  domainRatings:
                    type: array
                    description: The domain ratings of the product
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the domain
                        rating:
                          type: number
                          description: The rating of the domain
                          example: 4.5
                  featureRatings:
                    type: array
                    description: 'The feature ratings of the product, only include this if the request params featuresOn is true'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the feature
                        rating:
                          type: number
                          description: The rating of the feature
                          example: 4.5
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/sharedProduct/{productId}/rating''':
    get:
      summary: Get a specific product rating info via a sharing code
      description: This endpoint allows the front end to get information about the rating of a specific product with a shared code
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
        - name: code
          in: query
          required: true
          description: the shared code for the shared product
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1product~1%7BproductId%7D~1rating/get/responses/200/content/application~1json/schema'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/feature/{featureId}':
    get:
      summary: 'Get a specific product''s feature rating info, mainly the percentages of the ratings given by the users'
      description: 'this api is used for the feature popup in the front end, it will be used for the percentage split'
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
        - name: featureId
          in: path
          required: true
          description: The id of the feature
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                description: The response body
                properties:
                  percentages:
                    type: array
                    description: The percentages of the ratings given by the users
                    items:
                      type: number
                      description: 'The percentage of the rating, the index+1 of the array is the rating'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/sharedProduct/{productId}/feature/{featureId}/rating''':
    get:
      summary: 'Get a specific product''s feature rating info, mainly the percentages of the ratings given by the users via shared code'
      description: 'this api is used for the feature popup in the front end, it will be used for the percentage split'
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
        - name: featureId
          in: path
          required: true
          description: The id of the feature
          schema:
            type: integer
        - name: code
          in: query
          required: true
          description: sharing code
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                description: The response body
                properties:
                  percentages:
                    type: array
                    description: The percentages of the ratings given by the users
                    items:
                      type: number
                      description: 'The percentage of the rating, the index+1 of the array is the rating'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/codesigner':
    get:
      summary: get codesigner report based on filter parameters
      description: 'This endpoint allows the front end to get the codesigner report based on filter parameters, the result will render the codesigner report, the query parameters are optional, if not provided, the api will return all the codesigner report info'
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
        - in: query
          name: personaX_min
          schema:
            type: integer
            description: The minimum value of the personaX
        - in: query
          name: personaX_max
          schema:
            type: integer
            description: The maximum value of the personaX
        - in: query
          name: age_min
          schema:
            type: integer
            description: The minimum value of the age
        - in: query
          name: age_max
          schema:
            type: integer
            description: The maximum value of the age
        - in: query
          name: female
          schema:
            type: boolean
            description: if female included or not
        - in: query
          name: male
          schema:
            type: boolean
            description: if male included or not
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The id of the persona
                    name:
                      type: string
                      description: The name of the persona
                    profile:
                      type: string
                      description: The head image url of the persona
                    report:
                      type: string
                      description: 'The report url of the persona, this is only'
  '/product/{productId}/codesigner/{codesignerId}':
    get:
      summary: Get the codesigner survey by codesigner id
      description: This endpoint allows the front end to get the codesigner survey by codesigner id
      parameters:
        - name: codesignerId
          in: path
          required: true
          description: The id of the codesigner
          schema:
            type: integer
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the codesigner
                  age:
                    type: integer
                    description: The age of the codesigner
                  gender:
                    type: string
                    description: The gender of the codesigner
                  profile:
                    type: string
                    description: The head image url of the codesigner
                  staticQuestions:
                    type: array
                    description: The list of static questions for the codesigner
                    items:
                      type: object
                      properties:
                        question:
                          type: string
                          description: The question
                        answer:
                          type: string
                          description: The answer
                  personaCategoriesRatings:
                    type: array
                    description: The list of persona categories ratings for the codesigner
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the persona category
                        rating:
                          type: number
                          description: 'The rating of the persona category, from 0 to 1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/shareLink':
    get:
      summary: send a share request and return a randomly generated uuid
      description: 'This endpoint allows the front end to send a share request and return a randomly generated uuid, the uuid will be used to generate a share link, the share link will be used to share the product with other users'
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: The randomly generated uuid
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{productId}/shareViaEmail':
    post:
      summary: post a sending pdf document request to other users via email
      description: This endpoint allows the front end to send a pdf document to other users via email
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: array
                  items:
                    type: string
                    description: The email address of the user to send the pdf document to
                document:
                  type: string
                  format: binary
                  description: The PDF document to send.
              required:
                - email
                - document
      responses:
        '200':
          description: 'OK, the pdf document has been sent to the user''s email'
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message indicating the success of the request
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/survey/{surveyId}/productInfo':
    post:
      summary: Get product info for survey
      description: This endpoint allows the front end to get multiple product info for a survey
      parameters:
        - name: surveyId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productIds:
                  type: array
                  description: The list of product ids
                  items:
                    type: string
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the product
                    brand:
                      type: string
                      description: The brand of the product
                    brandIcon:
                      type: string
                      description: The brand icon of the product
                    description:
                      type: string
                      description: The description of the product
                    image:
                      type: string
                      description: The image link of the product
                    modelName:
                      type: string
                      description: The model name of the product
                    productCategoryName:
                      type: string
                      description: The product category of the product
                    expertOpinion:
                      type: string
                      description: The expert opinion of the product
                    overallRating:
                      type: number
                      description: 'The overall rating of the product, float number, fixed to 2 decimal places'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/survey/{surveyId}/domains':
    post:
      summary: Get a specific survey domain's info
      parameters:
        - name: surveyId
          in: path
          required: true
          description: The id of the survey
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productIds:
                  type: array
                  description: The list of product ids
                  items:
                    type: string
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFilterResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/survey/{surveyId}/rating':
    post:
      summary: Get a specific survey rating's info
      parameters:
        - name: surveyId
          in: path
          required: true
          description: The id of the survey
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productIds:
                  type: array
                  description: The list of product ids
                  items:
                    type: string
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the product
                    domainRatings:
                      type: array
                      description: The domain ratings of the product
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The id of the domain
                          rating:
                            type: number
                            description: The rating of the domain
                            example: 4.5
                    featureRatings:
                      type: array
                      description: 'The feature ratings of the product, only include this if the request params featuresOn is true'
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The id of the feature
                          rating:
                            type: number
                            description: The rating of the feature
                            example: 4.5
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/survey/{surveyId}/product/{productId}/feature/{featureId}':
    get:
      summary: Get a specific survey's specific product's specific feature's info
      description: This endpoint allows the front end to get information about the feature of a specific product in a specific survey
      parameters:
        - name: surveyId
          in: path
          required: true
          description: The id of the survey
          schema:
            type: integer
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
        - name: featureId
          in: path
          required: true
          description: The id of the feature
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                properties:
                  percentages:
                    type: array
                    description: The percentages of the ratings given by the users
                    items:
                      type: number
                      description: 'The percentage of the rating, the index+1 of the array is the rating'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/survey/{surveyId}/shareLink':
    get:
      summary: send a share request and return a randomly generated uuid
      description: 'This endpoint allows the front end to send a share request and return a randomly generated uuid, the uuid will be used to generate a share link, the share link will be used to share the product with other users'
      parameters:
        - name: surveyId
          in: path
          required: true
          description: The id of the product
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: |
                refreshed access token which will be valid for another 10 minutes
                - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
              schema:
                $ref: '#/paths/~1auth/get/responses/200/headers/Set-Cookie/schema'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: The randomly generated uuid
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
info:
  title: Mavie API
  description: API for Mavie Customer Backend
  version: 2.0.0
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ProductFilterResponse:
      type: object
      properties:
        domains:
          type: array
          description: The list of domains for the product
          items:
            $ref: '#/components/schemas/Domain'
        features:
          type: array
          description: The list of features for the product
          items:
            $ref: '#/components/schemas/Feature'
    Domain:
      type: object
      properties:
        id:
          type: integer
          description: The id of the domain
        name:
          type: string
          description: The name of the domain
        importance:
          type: number
          description: 'The importance of the domain, from 0 to 1'
        icon:
          type: string
          description: The icon svg of the domain
        roundIcon:
          type: string
          description: The round icon svg of the domain
        featureIds:
          type: array
          description: The list of feature ids for the domain
          items:
            type: integer
            description: The id of the feature
        description:
          type: string
          description: The description of the domain
    Feature:
      type: object
      properties:
        id:
          type: integer
          description: The id of the feature
        name:
          type: string
          description: The name of the feature
        importance:
          type: number
          description: 'The importance of the feature, from 0 to 1'
        icon:
          type: string
          description: 'The icon svg of the feature, purple background'
        description:
          type: string
          description: The description of the feature
    Persona:
      type: object
      properties:
        id:
          type: integer
          description: The id of the persona category
        name:
          type: string
          description: The name of the persona category
        icon:
          type: string
          description: The icon svg of the persona category
        min:
          type: integer
          description: The minimum value of the codesigners persona category ratings for this product
        max:
          type: integer
          description: The maximum value of the codesigners persona category ratings for this product
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
