post:
  summary: Customer Login
  description: This endpoint allows a customer to login to the system, set a jwt token in the cookie and return the list of products purchased by the customer
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            email:
              type: string
              description: The email address of the customer
            password:
              type: string
              description: The password of the customer
            remember_me:
              type: boolean
              description: If true, set both the refresh token and access token in the cookie, if false, only set the access token in the cookie
  responses:
    '200':
      description: OK
      headers:
        Set-Cookie:
          description: |
            there are two cookies set in the response, the access token is set to be httpOnly and secure, the refresh token is set to be httpOnly and secure, the refresh token is only included if remember_me is true
            - access_token: The JWT token to be used for authentication, this is valid for 10 minutes
            - refresh_token: The JWT refresh token to be used to refresh the access token, this is valid for 1 hour or 30 days depending on the value of remember_me
          schema:
            $ref: "../components/schemas/TwoTokensHeader.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              products:
                type: array
                description: The list of products purchased by the customer
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The id of the product
                    name:
                      type: string
                      description: The name of the product
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                  type: string
                  description: The error message
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: The error message